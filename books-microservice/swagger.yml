openapi: 3.0.1
info:
  title: "Books Microservice API"
  description: "API para gestión de libros"
  version: "v1"

servers:
  - url: "http://localhost:8089"
    description: "Servidor local"

tags:
  - name: "Libros"
    description: "Operaciones relacionadas con libros"

paths:

  /api/libros:
    get:
      tags:
        - "Libros"
      summary: "Obtener todos los libros"
      description: "Devuelve una lista de todos los libros disponibles"
      responses:
        '200':
          description: "Lista de libros obtenida correctamente"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibroDTO'
        '500':
          description: "Error interno del servidor"

    post:
      tags:
        - "Libros"
      summary: "Crear un nuevo libro"
      description: "Crea un nuevo libro con los datos proporcionados"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibroRequestDTO'
      responses:
        '200':
          description: "Libro creado correctamente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibroDTO'

  /api/libros/{id}:
    get:
      tags:
        - "Libros"
      summary: "Obtener libro por ID"
      description: "Devuelve los detalles de un libro específico por su ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Libro encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '404':
          description: "Libro no encontrado"
        '500':
          description: "Error interno del servidor"

    put:
      tags:
        - "Libros"
      summary: "Actualizar un libro existente"
      description: "Actualiza los datos de un libro existente por su ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibroRequestDTO'
      responses:
        '200':
          description: "Libro actualizado correctamente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '404':
          description: "Libro no encontrado"

    delete:
      tags:
        - "Libros"
      summary: "Eliminar un libro"
      description: "Elimina un libro por su ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: "Libro eliminado correctamente"
        '404':
          description: "Libro no encontrado"

  /api/libros/findByName:
    get:
      tags:
        - "Libros"
      summary: "Buscar libros por título"
      description: "Devuelve una lista de libros cuyo título coincide parcial o totalmente"
      parameters:
        - name: titulo
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Lista de libros encontrada"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibroDTO'

  /api/libros/findByGenero:
    get:
      tags:
        - "Libros"
      summary: "Buscar libros por género"
      description: "Devuelve una lista de libros que pertenecen a un género específico"
      parameters:
        - name: genero
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Lista de libros encontrada"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibroDTO'

components:

  schemas:

    LibroDTO:
      type: object
      properties:
        id:
          type: string
        titulo:
          type: string
        autor:
          type: string
        genero:
          type: string
        imagen:
          type: string
      required:
        - id
        - titulo
        - autor
        - genero
        - imagen

    LibroRequestDTO:
      type: object
      properties:
        titulo:
          type: string
        autor:
          type: string
        genero:
          type: string
        imagen:
          type: string
      required:
        - titulo
        - autor
        - genero
        - imagen